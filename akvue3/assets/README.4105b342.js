var s=Object.defineProperty,a=Object.defineProperties,n=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,e=Object.prototype.propertyIsEnumerable,p=(a,n,l)=>n in a?s(a,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):a[n]=l;import{r as o,M as c,o as d,c as r,C as i,b as h,f as g,q as u,a as j,w as v,d as m,y as _,A as k,t as f,L as y}from"./vendor.a13852a4.js";const w={setup:()=>({loading:o(!0)})},b={style:{width:"400px",height:"200px",border:"1px solid #ddd"}},x=g("容器区域");w.render=function(s,a,n,l,t,e){const p=c("loading");return d(),r("div",null,[i(h("div",b,[x],512),[[p,l.loading]])])};const q={setup:()=>({loading:o(!0)})},S={style:{width:"100%",height:"200px",border:"1px solid #ddd"},"ak-loading-text":"玩命加载中..","ak-loading-spinner":"ak-icon-loading","ak-loading-background":"rgba(0, 0, 0, 0.8)"},C=g("容器区域");q.render=function(s,a,n,l,t,e){const p=c("loading");return d(),r("div",null,[i(h("div",S,[C],512),[[p,l.loading]])])};const H={setup(){const s=o(!1),a=u("Loading");return{loading:s,openFullScreen:()=>{s.value=!0,setTimeout((()=>{s.value=!1}),3e3)},openFullScreen2:()=>{const s=a.loading();setTimeout((()=>{s.close()}),3e3)}}}},I=g("加载"),L=g("服务方式");H.render=function(s,a,n,l,t,e){const p=j("ak-button"),o=c("loading");return d(),r("div",null,[i(h(p,{type:"primary",onClick:l.openFullScreen},{default:v((()=>[I])),_:1},8,["onClick"]),[[o,l.loading,void 0,{el:!0,lock:!0}]]),h(p,{type:"primary",onClick:l.openFullScreen2},{default:v((()=>[L])),_:1},8,["onClick"])])};const F=m({components:{vdpv_0:w,vdpv_1:q,vdpv_2:H},setup(s){const c=o(),d=o(),r=o(),i=[c,d,r],h=_({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0});return g=((s,a)=>{for(var n in a||(a={}))t.call(a,n)&&p(s,n,a[n]);if(l)for(var n of l(a))e.call(a,n)&&p(s,n,a[n]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===h[a+"Height"]?h[a+"Height"]=(i[s].value?i[s].value.offsetHeight:0)||0:h[a+"Height"]=0}},k(h)),a(g,n({vdpv_0Ref:c,vdpv_1Ref:d,vdpv_2Ref:r}));var g}});F.$vd={matter:{},toc:[{content:"Loading 加载等待",anchor:"loading-加载等待",level:1},{content:"基本用法",anchor:"基本用法",level:3},{content:"自定义",anchor:"自定义",level:3},{content:"其他加载方式",anchor:"其他加载方式",level:3},{content:"API",anchor:"api",level:2},{content:"Loading",anchor:"loading",level:3}]};const A=F,O={class:"vuedoc  "},P=y('<h1 id="loading-加载等待" data-source-line="3"><a class="markdownIt-Anchor" href="#loading-加载等待">#</a> Loading 加载等待</h1><p data-source-line="5">自定义指令<code>v-loading</code>，只需要绑定<code>Boolean</code>即可。默认状况下，<code>Loading</code>会插入到绑定元素的子节点</p><h3 id="基本用法" data-source-line="7"><a class="markdownIt-Anchor" href="#基本用法">#</a> 基本用法</h3><pre style="display:none;"></pre>',4),R={class:"vuedoc-demo "},T={class:"vuedoc-demo__inner"},$={class:"vuedoc-demo__preview"},B={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},z=y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-loading</span>=<span class="hljs-string">&quot;loading&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 400px;height: 200px;border: 1px solid #ddd&quot;</span>&gt;</span>容器区域<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> loading = ref(<span class="hljs-literal">true</span>)\n    <span class="hljs-keyword">return</span> {\n      loading\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),D=h("h3",{id:"自定义","data-source-line":"31"},[h("a",{class:"markdownIt-Anchor",href:"#自定义"},"#"),g(" 自定义")],-1),E=h("p",{"data-source-line":"33"},[g("可自定义加载文案、图标和背景色。通过"),h("code",null,"ak-loading-text"),g("设置提示文字，"),h("code",null,"ak-loading-spinner"),g("设置图标类名，"),h("code",null,"ak-loading-background"),g("设置背景色")],-1),M=h("pre",{style:{display:"none"}},null,-1),N={class:"vuedoc-demo "},G={class:"vuedoc-demo__inner"},J={class:"vuedoc-demo__preview"},K={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},Q=y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%;height: 200px;border: 1px solid #ddd&quot;</span> <span class="hljs-attr">v-loading</span>=<span class="hljs-string">&quot;loading&quot;</span> <span class="hljs-attr">ak-loading-text</span>=<span class="hljs-string">&quot;玩命加载中..&quot;</span> <span class="hljs-attr">ak-loading-spinner</span>=<span class="hljs-string">&quot;ak-icon-loading&quot;</span> <span class="hljs-attr">ak-loading-background</span>=<span class="hljs-string">&quot;rgba(0, 0, 0, 0.8)&quot;</span>&gt;</span>容器区域<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> loading = ref(<span class="hljs-literal">true</span>)\n    <span class="hljs-keyword">return</span> {\n      loading\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),U=h("h3",{id:"其他加载方式","data-source-line":"57"},[h("a",{class:"markdownIt-Anchor",href:"#其他加载方式"},"#"),g(" 其他加载方式")],-1),V=h("p",{"data-source-line":"59"},[g("支持"),h("code",null,"inject('Loading')"),g("，"),h("code",null,"this.$msg()"),g("，"),h("code",null,"getCurrentInstance().proxy.$loading()"),g("方式引用")],-1),W=h("pre",{style:{display:"none"}},null,-1),X={class:"vuedoc-demo "},Y={class:"vuedoc-demo__inner"},Z={class:"vuedoc-demo__preview"},ss={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},as=y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">v-loading.el.lock</span>=<span class="hljs-string">&quot;loading&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;openFullScreen&quot;</span>&gt;</span>加载<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;openFullScreen2&quot;</span>&gt;</span>服务方式<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref, inject} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> loading = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">const</span> openFullScreen = <span class="hljs-function">() =&gt;</span> {\n      loading.value = <span class="hljs-literal">true</span>\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        loading.value = <span class="hljs-literal">false</span>\n      }, <span class="hljs-number">3000</span>)\n    }\n    <span class="hljs-keyword">const</span> Loading = inject(<span class="hljs-string">&#39;Loading&#39;</span>)\n    <span class="hljs-keyword">const</span> openFullScreen2 = <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-keyword">const</span> loading = Loading.loading()\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        loading.close()\n      }, <span class="hljs-number">3000</span>)\n    }\n    <span class="hljs-keyword">return</span> {\n      loading,\n      openFullScreen,\n      openFullScreen2\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1),ns=y('<h2 id="api" data-source-line="99"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="loading" data-source-line="101"><a class="markdownIt-Anchor" href="#loading">#</a> Loading</h3><table data-source-line="103"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>text</td><td>String</td><td>显示在加载图标下方的加载文案</td></tr><tr><td>background</td><td>String</td><td>遮罩背景色</td></tr><tr><td>spinner</td><td>String</td><td>自定义加载图标类名</td></tr><tr><td>lock</td><td>Boolean/false</td><td>锁定滚动</td></tr><tr><td>zIndex</td><td>Number</td><td>层级</td></tr><tr><td>el</td><td>标签对象</td><td>将内容插入到指定标签，默认为当前标签</td></tr></tbody></table>',3);A.render=function(s,a,n,l,t,e){const p=j("vdpv_0"),o=j("vdpv_1"),c=j("vdpv_2");return d(),r("div",O,[P,h("div",R,[h("div",T,[h("div",$,[h(p)]),h("div",{style:{height:s.vdpv_0Height+"px"},class:"vuedoc-demo__source"},[h("div",B,[z],512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(0))},f(s.vdpv_0Height>0?"hidden":"show"),1)])]),D,E,M,h("div",N,[h("div",G,[h("div",J,[h(o)]),h("div",{style:{height:s.vdpv_1Height+"px"},class:"vuedoc-demo__source"},[h("div",K,[Q],512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(1))},f(s.vdpv_1Height>0?"hidden":"show"),1)])]),U,V,W,h("div",X,[h("div",Y,[h("div",Z,[h(c)]),h("div",{style:{height:s.vdpv_2Height+"px"},class:"vuedoc-demo__source"},[h("div",ss,[as],512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(2))},f(s.vdpv_2Height>0?"hidden":"show"),1)])]),ns])};export default A;
