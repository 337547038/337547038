var s=Object.defineProperty,a=Object.defineProperties,n=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,t=Object.prototype.propertyIsEnumerable,e=(a,n,l)=>n in a?s(a,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):a[n]=l;import{r as c,a as o,o as d,c as r,b as h,F as u,d as i,v as j,z as g,t as v,I as m,f as _}from"./vendor.c011ad29.js";const f={setup:()=>({defaultValue:c("初始默认值")})};f.render=function(s,a,n,l,p,t){const e=o("ak-input");return d(),r(u,null,[h("p",null,[h(e)]),h("p",null,[h(e,{placeholder:"请输入内容"})]),h("p",null,[h(e,{placeholder:"请输入内容",modelValue:l.defaultValue,"onUpdate:modelValue":a[1]||(a[1]=s=>l.defaultValue=s)},null,8,["modelValue"])]),h("p",null,[h(e,{placeholder:"禁用状态",disabled:!0})])],64)};const k={data:()=>({valueClear:""})};k.render=function(s,a,n,l,p,t){const e=o("ak-input");return d(),r(e,{placeholder:"试着输入些什么看看",modelValue:p.valueClear,"onUpdate:modelValue":a[1]||(a[1]=s=>p.valueClear=s),clear:!0},null,8,["modelValue"])};const y={data:()=>({value4:""})};y.render=function(s,a,n,l,p,t){const e=o("ak-input");return d(),r(e,{placeholder:"请输入内容",modelValue:p.value4,"onUpdate:modelValue":a[1]||(a[1]=s=>p.value4=s),showEye:!0,type:"password"},null,8,["modelValue"])};const w={};w.render=function(s,a){const n=o("ak-input");return d(),r(u,null,[h("p",null,[h(n,{placeholder:"请输入内容","prefix-icon":"icon-user"})]),h("p",null,[h(n,{placeholder:"请输入内容","suffix-icon":"icon-search"})])],64)};const q={setup:()=>({defaultValue:c("初始默认值")})};q.render=function(s,a,n,l,p,t){const e=o("ak-input");return d(),r(u,null,[h("p",null,[h(e,{placeholder:"默认尺寸"})]),h("p",null,[h(e,{placeholder:"sixe=medium",size:"medium"})]),h("p",null,[h(e,{placeholder:"sixe=small",size:"small"})]),h("p",null,[h(e,{placeholder:"sixe=mini",size:"mini"})])],64)};const x=i({components:{vdpv_0:f,vdpv_1:k,vdpv_2:y,vdpv_3:w,vdpv_4:q},setup(s){const o=c(),d=c(),r=c(),h=c(),u=c(),i=[o,d,r,h,u],v=j({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0,vdpv_3Height:0,vdpv_4Height:0});return m=((s,a)=>{for(var n in a||(a={}))p.call(a,n)&&e(s,n,a[n]);if(l)for(var n of l(a))t.call(a,n)&&e(s,n,a[n]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===v[a+"Height"]?v[a+"Height"]=(i[s].value?i[s].value.offsetHeight:0)||0:v[a+"Height"]=0}},g(v)),a(m,n({vdpv_0Ref:o,vdpv_1Ref:d,vdpv_2Ref:r,vdpv_3Ref:h,vdpv_4Ref:u}));var m}});x.$vd={matter:{},toc:[{content:"Input 输入框",anchor:"input-输入框",level:1},{content:"基本使用",anchor:"基本使用",level:3},{content:"显示清空按钮",anchor:"显示清空按钮",level:3},{content:"可显示密码明文",anchor:"可显示密码明文",level:3},{content:"添加前后缀Icon",anchor:"添加前后缀icon",level:3},{content:"设置大小",anchor:"设置大小",level:3},{content:"API",anchor:"api",level:2},{content:"Input Props",anchor:"input-props",level:3}]};const b=x,I={class:"vuedoc  "},H=m('<h1 id="input-输入框" data-source-line="1"><a class="markdownIt-Anchor" href="#input-输入框">#</a> Input 输入框</h1><h3 id="基本使用" data-source-line="3"><a class="markdownIt-Anchor" href="#基本使用">#</a> 基本使用</h3><pre style="display:none;"></pre>',3),V={class:"vuedoc-demo "},C={class:"vuedoc-demo__inner"},A={class:"vuedoc-demo__preview"},R={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},z=m('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;defaultValue&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;禁用状态&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span>{\n  <span class="hljs-keyword">const</span> defaultValue = ref(<span class="hljs-string">&#39;初始默认值&#39;</span>)\n   <span class="hljs-keyword">return</span> {\n    defaultValue\n   }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),O=h("h3",{id:"显示清空按钮","data-source-line":"25"},[h("a",{class:"markdownIt-Anchor",href:"#显示清空按钮"},"#"),_(" 显示清空按钮")],-1),P=h("p",{"data-source-line":"27"},[_("设置"),h("code",null,'clear="true"'),_("，在输入框不为空时显示清空按钮")],-1),E=h("pre",{style:{display:"none"}},null,-1),U={class:"vuedoc-demo "},D={class:"vuedoc-demo__inner"},F={class:"vuedoc-demo__preview"},S={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},$=m('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;试着输入些什么看看&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;valueClear&quot;</span> <span class="hljs-attr">:clear</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  data () {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">valueClear</span>: <span class="hljs-string">&#39;&#39;</span>,\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),B=h("h3",{id:"可显示密码明文","data-source-line":"44"},[h("a",{class:"markdownIt-Anchor",href:"#可显示密码明文"},"#"),_(" 可显示密码明文")],-1),G=h("p",{"data-source-line":"46"},[h("code",null,'type="password'),_("时设置"),h("code",null,'showEye="true"'),_("可显示密码明文")],-1),J=h("pre",{style:{display:"none"}},null,-1),K={class:"vuedoc-demo "},L={class:"vuedoc-demo__inner"},M={class:"vuedoc-demo__preview"},N={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},Q=m('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value4&quot;</span> <span class="hljs-attr">:showEye</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  data () {\n    <span class="hljs-keyword">return</span> {\n     <span class="hljs-attr">value4</span>: <span class="hljs-string">&#39;&#39;</span>,\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),T=h("h3",{id:"添加前后缀icon","data-source-line":"63"},[h("a",{class:"markdownIt-Anchor",href:"#添加前后缀icon"},"#"),_(" 添加前后缀Icon")],-1),W=h("p",{"data-source-line":"65"},[_("可以通过 "),h("code",null,"prefix-icon"),_(" 和 "),h("code",null,"suffix-icon"),_(" 属性在 input 组件首部和尾部增加显示图标，也可以通过 slot "),h("code",null,"prefix"),_(" 和 "),h("code",null,"suffix"),_(" 来放置图标。")],-1),X=h("pre",{style:{display:"none"}},null,-1),Y={class:"vuedoc-demo "},Z={class:"vuedoc-demo__inner"},ss={class:"vuedoc-demo__preview"},as={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},ns=m('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> \n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> \n      <span class="hljs-attr">prefix-icon</span>=<span class="hljs-string">&quot;icon-user&quot;</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> \n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> \n      <span class="hljs-attr">suffix-icon</span>=<span class="hljs-string">&quot;icon-search&quot;</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1),ls=h("h3",{id:"设置大小","data-source-line":"84"},[h("a",{class:"markdownIt-Anchor",href:"#设置大小"},"#"),_(" 设置大小")],-1),ps=h("p",{"data-source-line":"86"},[_("使用"),h("code",null,'size="medium/small/mini"'),_("设置按钮大小")],-1),ts=h("pre",{style:{display:"none"}},null,-1),es={class:"vuedoc-demo "},cs={class:"vuedoc-demo__inner"},os={class:"vuedoc-demo__preview"},ds={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},rs=m('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;默认尺寸&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;sixe=medium&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;medium&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;sixe=small&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;sixe=mini&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span>{\n  <span class="hljs-keyword">const</span> defaultValue = ref(<span class="hljs-string">&#39;初始默认值&#39;</span>)\n   <span class="hljs-keyword">return</span> {\n    defaultValue\n   }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1),hs=m('<h2 id="api" data-source-line="108"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="input-props" data-source-line="110"><a class="markdownIt-Anchor" href="#input-props">#</a> Input Props</h3><table data-source-line="111"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>v-model</td><td>any</td><td>输入框的值</td></tr><tr><td>clear</td><td>boolean/false</td><td>显示清空按钮</td></tr><tr><td>showEye</td><td>boolean/false</td><td>密码框显示明文切换</td></tr><tr><td>width</td><td>string</td><td>设置宽度属性</td></tr><tr><td>size</td><td>string</td><td>添加的大小尺寸样式</td></tr><tr><td>prefixIcon</td><td>string</td><td>前缀icon图标</td></tr><tr><td>suffixIcon</td><td>string</td><td>后缀icon图标</td></tr><tr><td>-</td><td></td><td>其它原生所有属性</td></tr></tbody></table>',3);b.render=function(s,a,n,l,p,t){const e=o("vdpv_0"),c=o("vdpv_1"),u=o("vdpv_2"),i=o("vdpv_3"),j=o("vdpv_4");return d(),r("div",I,[H,h("div",V,[h("div",C,[h("div",A,[h(e)]),h("div",{style:{height:s.vdpv_0Height+"px"},class:"vuedoc-demo__source"},[h("div",R,[z],512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(0))},v(s.vdpv_0Height>0?"hidden":"show"),1)])]),O,P,E,h("div",U,[h("div",D,[h("div",F,[h(c)]),h("div",{style:{height:s.vdpv_1Height+"px"},class:"vuedoc-demo__source"},[h("div",S,[$],512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(1))},v(s.vdpv_1Height>0?"hidden":"show"),1)])]),B,G,J,h("div",K,[h("div",L,[h("div",M,[h(u)]),h("div",{style:{height:s.vdpv_2Height+"px"},class:"vuedoc-demo__source"},[h("div",N,[Q],512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(2))},v(s.vdpv_2Height>0?"hidden":"show"),1)])]),T,W,X,h("div",Y,[h("div",Z,[h("div",ss,[h(i)]),h("div",{style:{height:s.vdpv_3Height+"px"},class:"vuedoc-demo__source"},[h("div",as,[ns],512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(3))},v(s.vdpv_3Height>0?"hidden":"show"),1)])]),ls,ps,ts,h("div",es,[h("div",cs,[h("div",os,[h(j)]),h("div",{style:{height:s.vdpv_4Height+"px"},class:"vuedoc-demo__source"},[h("div",ds,[rs],512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(4))},v(s.vdpv_4Height>0?"hidden":"show"),1)])]),hs])};export default b;
